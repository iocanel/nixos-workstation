#!/usr/bin/env bash

# Script to update local NixOS configuration files from /etc/nixos
# This pulls the current system configuration into your local directory

set -euo pipefail

# Configuration
LOCAL_CONFIG_DIR="/home/iocanel/.nixos"
SYSTEM_CONFIG_DIR="/etc/nixos"

# Color output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Ensure local config directory exists
mkdir -p "$LOCAL_CONFIG_DIR"

log_info "Updating local NixOS configuration from /etc/nixos..."

# Copy main configuration files
for file in configuration.nix hardware-configuration.nix; do
    if [[ -f "$SYSTEM_CONFIG_DIR/$file" ]]; then
        log_info "Copying $file..."
        cp "$SYSTEM_CONFIG_DIR/$file" "$LOCAL_CONFIG_DIR/"
    else
        log_warn "$file not found in $SYSTEM_CONFIG_DIR"
    fi
done

# Copy modules directory if it exists
if [[ -d "$SYSTEM_CONFIG_DIR/modules" ]]; then
    log_info "Copying modules directory..."
    # Remove existing modules directory first to avoid conflicts
    rm -rf "$LOCAL_CONFIG_DIR/modules"
    cp -r "$SYSTEM_CONFIG_DIR/modules" "$LOCAL_CONFIG_DIR/"
else
    log_warn "modules directory not found in $SYSTEM_CONFIG_DIR"
fi

# Copy overlays directory if it exists
if [[ -d "$SYSTEM_CONFIG_DIR/overlays" ]]; then
    log_info "Copying overlays directory..."
    # Remove existing overlays directory first to avoid conflicts
    rm -rf "$LOCAL_CONFIG_DIR/overlays"
    cp -r "$SYSTEM_CONFIG_DIR/overlays" "$LOCAL_CONFIG_DIR/"
else
    log_warn "overlays directory not found in $SYSTEM_CONFIG_DIR"
fi

# Copy packages directory if it exists
if [[ -d "$SYSTEM_CONFIG_DIR/packages" ]]; then
    log_info "Copying packages directory..."
    # Remove existing packages directory first to avoid conflicts
    rm -rf "$LOCAL_CONFIG_DIR/packages"
    cp -r "$SYSTEM_CONFIG_DIR/packages" "$LOCAL_CONFIG_DIR/"
else
    log_warn "packages directory not found in $SYSTEM_CONFIG_DIR"
fi

# Preserve our sync scripts
log_info "Ensuring sync scripts are preserved..."
if [[ ! -x "$LOCAL_CONFIG_DIR/etc-pull" ]]; then
    log_warn "etc-pull script missing or not executable!"
fi
if [[ ! -x "$LOCAL_CONFIG_DIR/etc-push" ]]; then
    log_warn "etc-push script missing or not executable!"
fi

# Show git status if we're in a git repository
if [[ -d "$LOCAL_CONFIG_DIR/.git" ]]; then
    log_info "Git status after update:"
    cd "$LOCAL_CONFIG_DIR"
    git status --short
fi

log_info "Configuration update complete!"
log_info "Files updated in: $LOCAL_CONFIG_DIR"