# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ahci" "xhci_pci" "thunderbolt" "nvme" "usb_storage" "usbhid" "sd_mod" "sr_mod" "rtsx_pci_sdmmc" "r8152" "usbnet" "hid_generic" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ 
    "kvm-amd"           # AMD virtualization
  ];
  boot.extraModulePackages = [ ];
  
  # CPU-specific optimizations for AMD Ryzen AI 7 PRO 350 (Zen 5)
  boot.kernelParams = [
    # Enable AMD P-State for better power management
    "amd_pstate=active"
    # Optimize for modern Zen 5 architecture
    "processor.max_cstate=1"  # Better latency for performance workloads
    # Enable enhanced security features
    "spec_store_bypass_disable=on"
    "l1tf=full,force"
  ];

  fileSystems."/" =
  { 
      device = "/dev/disk/by-uuid/8320826a-0f92-4294-a25e-a1cde9448769";
      fsType = "ext4";
  };

  fileSystems."/home" =
  { 
      device = "/dev/disk/by-uuid/4882f657-3753-4e28-bd2e-25d259cdff4f";
      fsType = "ext4";
  };


  fileSystems."/boot" =
  { 
      device = "/dev/disk/by-uuid/CC3E-D41A";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
  };
  
  fileSystems."/mnt/usb" =
  { 
      device = "/dev/sda1";
      fsType = "vfat";
      options = [ "nofail" "user" "rw" "uid=1000" "gid=100" "umask=0002" ];
  };

#  fileSystems."/mnt/downloads" = 
#  {
#    device = "192.168.1.250:/volume2/downloads";
#    fsType = "nfs";
#    options = [ "nofail" "bg" ];
#  };

  fileSystems."/mnt/bjj" = 
  {
    device = "192.168.1.250:/volume2/bjj";
    fsType = "nfs";
    options = [ "nofail" "bg" ];
  };

#  fileSystems."/mnt/media" = 
#  {
#    device = "192.168.1.250:/volume2/media";
#    fsType = "nfs";
#    options = [ "nofail" "bg" ];
#  };



  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0u2u1u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware = {
    # NVIDIA GPU configuration for hybrid setup
    nvidia = {
      package = config.boot.kernelPackages.nvidiaPackages.stable;
      
      # Enable PRIME for hybrid graphics (NVIDIA + AMD)
      prime = {
        # Bus IDs from lspci output
        nvidiaBusId = "PCI:198:0:0";  # c6:00.0 in hex = 198:0:0 in decimal
        amdgpuBusId = "PCI:199:0:0";  # c7:00.0 in hex = 199:0:0 in decimal
        
        # Enable offload mode for better battery life
        offload = {
          enable = true;
          enableOffloadCmd = true;
        };
      };
      
      # Power management for laptops
      powerManagement = {
        enable = true;
        finegrained = true;
      };
      
      # Use open source kernel modules (recommended for newer cards)
      open = false;  # Set to true if you want to try open source drivers
    };
    
    # AMD Ryzen AI 7 PRO 350 (Zen 5) optimizations
    cpu.amd = {
      updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    };
    
    # Enable advanced CPU features
    enableRedistributableFirmware = true;
    
    # AMD GPU driver support
    amdgpu.amdvlk.enable = true;
    
    # Graphics support (replaces opengl in NixOS 24.05+)
    graphics = {
      enable = true;
      enable32Bit = true;  # For 32-bit applications
    };
    
    bluetooth = {
      enable = true;
      powerOnBoot = true;
    };
    
    # Power management optimizations for laptop
    acpilight.enable = true;  # Better backlight control
  };
  
  # Enable NVIDIA video drivers for X11
  services.xserver.videoDrivers = [ "nvidia" ];
}
